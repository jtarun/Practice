package com.jtarun.practice.interviewbit.dp;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

class Solution2 {
  public int canJump(ArrayList<Integer> a) {
    int n = a.size();
    System.out.println(n);
    if (n == 0) {
      return 0;
    }

    int i = 0;
    int j = a.get(0);

    if (n == 1) {
      return 1;
    }

    while (i < n && j < n) {
      System.out.println(i+ " " + j);
      if (i >= j) {
        return 0;
      }

      int max = j;
      for (int k = i; k <= j; k++) {
        max = Math.max(max, a.get(k) + k);
      }

      i = j + 1;
      j = max;
    }
    return j >= n ? 1 : 0;
  }
}


public class CanJump {

  public static void main(String[] args) {
    Solution2 sol = new Solution2();
    List<Integer> t =
    Arrays.asList(12, 29, 0, 14, 0, 0, 0, 1, 0, 0, 9, 0, 0, 0, 0, 0, 25, 0, 14, 0, 20, 0, 0, 11, 0,
        0, 0, 0, 6, 0, 0, 0, 0, 11, 7, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 16, 3, 0, 0, 16, 0, 0, 0, 0,
        5, 8, 29, 0, 0, 27, 0, 0, 15, 0, 1, 0, 26, 0, 20, 0, 0, 29, 0, 0, 0, 19, 0, 25, 5, 0, 0, 0,
        5, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 28, 7, 13, 0, 14, 0, 0, 0, 0, 7, 0, 16, 6,
        18, 4, 0, 0, 0, 18, 0, 24, 0, 28, 29, 0, 27, 0, 1, 0, 0, 17, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 17, 5, 0, 0, 17, 0, 6, 7, 0, 0, 22, 0, 0, 0, 0, 0, 0, 22, 0, 0, 3, 0, 0, 17, 0, 0, 0,
        22, 3, 0, 3, 12, 0, 0, 0, 26, 0, 0, 0, 0, 16, 0, 0, 0, 28, 4, 16, 0, 0, 0, 0, 12, 0, 11,
        25, 8, 0, 0, 0, 0, 30, 30, 1, 26, 2, 0, 0, 16, 0, 0, 0, 18, 0, 0, 0, 0, 27, 14, 8, 9, 0,
        0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0,
        0, 23, 0, 0, 0, 0, 8, 30, 0, 20, 0, 0, 0, 10, 5, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0,
        15, 11, 0, 11, 0, 0, 0, 3, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 14, 4, 0, 14,
        27, 7, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 9, 21, 0, 22, 0, 0, 0, 2, 0, 0, 30, 0, 28, 0, 0, 0,
        0, 0, 0, 0, 8, 12, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 30, 17, 0, 0, 0, 0, 14, 27, 0, 0,
        0, 0, 0, 0, 0, 0, 23, 0, 10, 0, 0, 26, 0, 28, 8, 0, 0, 22, 24, 5, 0, 0, 17, 1, 0, 0, 0, 0,
        0, 17, 0, 0, 0, 14, 0, 0, 0, 22, 17, 0, 10, 0, 1, 0, 0, 6, 0, 0, 0, 0, 0, 0, 24, 0, 0, 27,
        13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 23, 0, 30, 0, 0, 24, 0,
        0, 0, 0, 20, 28, 0, 0, 0, 0, 0, 0, 0, 6, 17, 0, 0, 0, 0, 24, 0, 0, 0, 0, 26, 0, 13, 0, 15,
        0, 28, 22, 0, 19, 19, 5, 0, 21, 18, 6, 0, 0, 0, 0, 8, 0, 0, 0, 0, 13, 0, 16, 0, 12, 0, 0,
        21, 0, 0, 27, 9, 0, 0, 30, 5, 0, 18, 20, 7, 0, 0, 0, 26, 12, 8, 6, 0, 0, 0, 0, 0, 20, 0, 0,
        0, 0, 9, 4, 0, 0, 8, 24, 0, 0, 0, 0, 0, 28, 0, 15, 0, 0, 5, 0, 0, 7, 0, 11, 0, 0, 0, 11, 0,
        0, 10, 8, 0, 22, 0, 0, 0, 8, 0, 22, 0, 0, 0, 0, 0, 0, 26, 0, 2, 0, 0, 0, 0, 25, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 28, 14, 14, 0, 0, 27, 8, 13, 0, 0, 0, 0, 0, 0, 19, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 29, 12, 4, 20, 0, 0, 0, 0, 0, 0, 0, 6, 0, 25, 0,
        0, 10, 24, 3, 0, 19, 0, 0, 0, 14, 15, 0, 0, 4, 0, 0, 20, 23, 19, 0, 0, 7, 0, 21, 0, 0, 0,
        0, 10, 0, 23, 0, 19, 0, 0, 0, 0, 22, 0, 1, 0, 0, 4, 10, 0, 21, 0, 0, 23, 29, 0, 0, 5, 0,
        0, 0, 0, 0, 29, 15, 0, 10, 0, 0, 0, 10, 0, 0, 0, 0, 15, 29, 27, 12, 22, 25, 0, 0, 0);

    int r = sol.canJump(new ArrayList<>(t));
    System.out.println(r);
  }

}
